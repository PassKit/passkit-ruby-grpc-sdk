# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: io/core/a_rpc_others.proto for package 'io'

require 'grpc'
require 'io/core/a_rpc_others_pb'

module Io
  module Users
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'io.Users'

      rpc :createUser, Io::NewUser, Io::NewUserResponse
      rpc :newUser, Io::NewUser, Io::JWT
      rpc :verify, Io::Id, Io::Boolean
      rpc :resendVerificationEmail, Google::Protobuf::Empty, Io::Boolean
      rpc :getUser, Google::Protobuf::Empty, Io::GetUserResponse
      rpc :login, Io::Credentials, Io::JWT
      rpc :resetPassword, Io::Credentials, Google::Protobuf::Empty
      rpc :sendPasswordResetLink, Io::Username, Google::Protobuf::Empty
      rpc :changePassword, Io::PasswordResetInput, Google::Protobuf::Empty
      rpc :getProjectsForUserQueryDeprecated, Io::Pagination, stream(Io::Project)
      rpc :getProjectsQueryDeprecated, Io::Pagination, stream(Io::Project)
      rpc :getProjectsForUserQuery, Io::Filters, stream(Io::Project)
      rpc :getProjectsQuery, Io::Filters, stream(Io::Project)
      rpc :getProjectByUuid, Io::Id, Io::Project
      rpc :getProjectAndTemplateByShortCode, Io::Id, Io::ProjectByShortCodeResult
      rpc :getProjectsForUser, Io::ProjectStatusFilter, stream(Io::Project)
      rpc :getProjects, Io::ProjectStatusFilter, stream(Io::Project)
    end

    Stub = Service.rpc_stub_class
  end
  module Messages
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'io.Messages'

      rpc :sendMessage, Io::Message, Io::Id
      rpc :getMessages, Io::Pagination, stream(Io::Message)
    end

    Stub = Service.rpc_stub_class
  end
  module Jobs
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'io.Jobs'

      rpc :importCsv, Io::CsvImportRequest, Io::Id
      rpc :getJobs, Io::Pagination, stream(Io::Job)
      rpc :getJob, Io::Id, Io::Job
    end

    Stub = Service.rpc_stub_class
  end
  module Integrations
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'io.Integrations'

      rpc :createIntegrations, Io::IntegrationConfigs, Io::Id
      rpc :getIntegrations, Io::ProtocolIdInput, Io::IntegrationConfigs
      rpc :updateIntegrations, Io::IntegrationConfigs, Io::Id
      rpc :deleteIntegrations, Io::ProtocolIdInput, Google::Protobuf::Empty
      rpc :createSinkSubscription, Io::SinkSubscription, Io::Id
      rpc :getSinkSubscription, Io::SubscriptionRequest, Io::SinkSubscription
      rpc :listSinkSubscriptionsDeprecated, Io::ListRequestDeprecated, stream(Io::SinkSubscription)
      rpc :listSinkSubscriptions, Io::ListRequest, stream(Io::SinkSubscription)
      rpc :updateSinkSubscription, Io::SinkSubscription, Io::Id
      rpc :deleteSinkSubscription, Io::SubscriptionRequest, Google::Protobuf::Empty
      rpc :getSampleSubscriptionEvent, Io::Id, Io::SinkSubscription
    end

    Stub = Service.rpc_stub_class
  end
end
