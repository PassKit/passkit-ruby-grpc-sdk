# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/raw/project.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'io/common/distribution_pb'
require 'io/common/localization_pb'
require 'io/common/project_pb'
require 'io/common/billing_pb'


descriptor_data = "\n\x14io/raw/project.proto\x12\x03raw\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cio/common/distribution.proto\x1a\x1cio/common/localization.proto\x1a\x17io/common/project.proto\x1a\x17io/common/billing.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xfe\x03\n\x0bPassProject\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12*\n\rlocalizedName\x18\x03 \x01(\x0b\x32\x13.io.LocalizedString\x12!\n\x06status\x18\x04 \x03(\x0e\x32\x11.io.ProjectStatus\x12\x18\n\x05quota\x18\x05 \x01(\x0b\x32\t.io.Quota\x12\x1a\n\x12passTypeIdentifier\x18\x06 \x01(\t\x12\x36\n\x14\x64istributionSettings\x18\x07 \x01(\x0b\x32\x18.io.DistributionSettings\x12+\n\x07\x63reated\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12+\n\x07updated\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp:\xbd\x01\x92\x41\xb9\x01\n\xb6\x01*\x0cPass Project2\x95\x01Pass Project holds the basic business logic. Pass Project holds details on pass distribution, quotas, Apple certificate, integrations & hooks to use.\xd2\x01\x04name\xd2\x01\x06status\"q\n\x16PassProjectCopyRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12!\n\x06status\x18\x03 \x03(\x0e\x32\x11.io.ProjectStatus\x12\x1a\n\x12passTypeIdentifier\x18\x04 \x01(\tBS\n\x14\x63om.passkit.grpc.RawZ(stash.passkit.com/io/model/sdk/go/io/raw\xaa\x02\x10PassKit.Grpc.Rawb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Raw
  PassProject = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("raw.PassProject").msgclass
  PassProjectCopyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("raw.PassProjectCopyRequest").msgclass
end
