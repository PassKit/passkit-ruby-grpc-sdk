# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/raw/a_rpc.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'
require 'google/api/annotations_pb'
require 'io/common/common_objects_pb'
require 'io/raw/project_pb'
require 'io/raw/pass_pb'


descriptor_data = "\n\x12io/raw/a_rpc.proto\x12\x03raw\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1eio/common/common_objects.proto\x1a\x14io/raw/project.proto\x1a\x11io/raw/pass.proto\x1a.protoc-gen-openapiv2/options/annotations.proto2\xd8\x0f\n\x03Raw\x12\x7f\n\x11\x63reatePassProject\x12\x10.raw.PassProject\x1a\x06.io.Id\"P\x92\x41\x32\n\x03Raw\x12\x13\x43reate Pass Project\x1a\x16\x43reates a Pass Project\x82\xd3\xe4\x93\x02\x15\"\x10/raw/passProject:\x01*\x12\x93\x01\n\x11updatePassProject\x12\x10.raw.PassProject\x1a\x10.raw.PassProject\"Z\x92\x41<\n\x03Raw\x12\x13Update Pass Project\x1a Updates an existing Pass Project\x82\xd3\xe4\x93\x02\x15\x1a\x10/raw/passProject:\x01*\x12\x82\x01\n\x0egetPassProject\x12\x06.io.Id\x1a\x10.raw.PassProject\"V\x92\x41\x36\n\x03Raw\x12\x10Get Pass Project\x1a\x1dGets an existing Pass Project\x82\xd3\xe4\x93\x02\x17\x12\x15/raw/passProject/{id}\x12\x94\x01\n\x0f\x63opyPassProject\x12\x1b.raw.PassProjectCopyRequest\x1a\x06.io.Id\"\\\x92\x41\x39\n\x03Raw\x12\x11\x43opy Pass Project\x1a\x1f\x43opies an existing Pass Project\x82\xd3\xe4\x93\x02\x1a\"\x15/raw/passProject/copy:\x01*\x12\x84\x02\n\x11\x64\x65letePassProject\x12\x06.io.Id\x1a\x16.google.protobuf.Empty\"\xce\x01\x92\x41\xad\x01\n\x03Raw\x12\x13\x44\x65lete Pass Project\x1a\x90\x01\x44\x65letes an existing Pass Project by id. Deleting a Pass Project results in all passes being invalidated and removed. Needs to be used with care.\x82\xd3\xe4\x93\x02\x17*\x15/raw/passProject/{id}\x12\x65\n\ncreatePass\x12\t.raw.Pass\x1a\x06.io.Id\"D\x92\x41-\n\x03Raw\x12\x0b\x43reate Pass\x1a\x19\x43reates a new Pass record\x82\xd3\xe4\x93\x02\x0e\"\t/raw/pass:\x01*\x12k\n\nupdatePass\x12\t.raw.Pass\x1a\x06.io.Id\"J\x92\x41\x33\n\x03Raw\x12\x0bUpdate Pass\x1a\x1fUpdates an existing Pass record\x82\xd3\xe4\x93\x02\x0e\x1a\t/raw/pass:\x01*\x12\x92\x01\n\x11streamPassUpdates\x12\t.raw.Pass\x1a\x06.io.Id\"f\x92\x41\x63\n\x03Raw\x12\x32Stream Pass Updates (official SDK\'s only, no REST)\x1a(Updates existing Pass records via stream(\x01\x30\x01\x12\x64\n\x0bgetPassById\x12\x06.io.Id\x1a\t.raw.Pass\"B\x92\x41)\n\x03Raw\x12\x0eGet Pass by ID\x1a\x12Gets a pass record\x82\xd3\xe4\x93\x02\x10\x12\x0e/raw/pass/{id}\x12\xc3\x01\n\x13getPassByExternalId\x12\".raw.PassRecordByExternalIdRequest\x1a\t.raw.Pass\"}\x92\x41\x41\n\x03Raw\x12\x17Get Pass by External ID\x1a!Gets a pass record by External ID\x82\xd3\xe4\x93\x02\x33\x12\x31/raw/pass/externalId/{passProjectId}/{externalId}\x12v\n\ndeletePass\x12\t.raw.Pass\x1a\x16.google.protobuf.Empty\"E\x92\x41)\n\x03Raw\x12\x0b\x44\x65lete Pass\x1a\x15\x44\x65letes a pass record\x82\xd3\xe4\x93\x02\x13*\x0e/raw/pass/{id}:\x01*\x12\xc0\x01\n\x17listPassesByPassProject\x12#.raw.ListPassesByPassProjectRequest\x1a\t.raw.Pass\"s\x92\x41J\n\x03Raw\x12\x0bList Passes\x1a\x36List all passes for pass project. Supports pagination.\x82\xd3\xe4\x93\x02 \"\x1b/raw/pass/listByPassProject:\x01*0\x01\x12\xc6\x01\n\x18listPassesByPassTemplate\x12$.raw.ListPassesByPassTemplateRequest\x1a\t.raw.Pass\"w\x92\x41M\n\x03Raw\x12\x0bList Passes\x1a\x39List all passes for a pass template. Supports pagination.\x82\xd3\xe4\x93\x02!\"\x1c/raw/pass/listByPassTemplate:\x01*0\x01\x42\x8a\x07\n\x14\x63om.passkit.grpc.RawZ(stash.passkit.com/io/model/sdk/go/io/raw\xaa\x02\x10PassKit.Grpc.Raw\x92\x41\xb3\x06\x12\xc0\x02\n\x16PassKit Raw Passes API\x12\xa5\x01This protocol is suit for cases where the business logic is handled elsewhere, and the purpose is purely to issue and update content for Apple Wallet and Google Pay.\x1a\x38https://passkit.com/legal/terms-of-subscription-service/\"?\n\x0fPassKit Support\x12\x17https://docs.passkit.io\x1a\x13support@passkit.com2\x03\x30.1*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR9\n\x03\x32\x30\x30\x12\x32\n(Returned when the request is successful.\x12\x06\n\x04\x9a\x02\x01\x07R4\n\x03\x34\x30\x30\x12-\n+Returned when wrong user input is provided.R0\n\x03\x34\x30\x31\x12)\n\'Returned when the user is unauthorized.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.R;\n\x03\x34\x30\x34\x12\x34\n*Returned when the resource does not exist.\x12\x06\n\x04\x9a\x02\x01\x07R<\n\x03\x35\x30\x30\x12\x35\n+Returned when there is an unexpected error.\x12\x06\n\x04\x9a\x02\x01\x07RW\n\x03\x35\x30\x33\x12P\nNServer is unavailable. Back off for 250ms and repeat request until successful.b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Raw
end
