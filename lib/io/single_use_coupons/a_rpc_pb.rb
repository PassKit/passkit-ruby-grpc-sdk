# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/single_use_coupons/a_rpc.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'
require 'google/api/annotations_pb'
require 'io/common/common_objects_pb'
require 'io/common/pagination_pb'
require 'io/common/filter_pb'
require 'io/common/reporting_pb'
require 'io/common/personal_pb'
require 'io/single_use_coupons/campaign_pb'
require 'io/single_use_coupons/offer_pb'
require 'io/single_use_coupons/coupon_pb'


descriptor_data = "\n!io/single_use_coupons/a_rpc.proto\x12\x12single_use_coupons\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1eio/common/common_objects.proto\x1a\x1aio/common/pagination.proto\x1a\x16io/common/filter.proto\x1a\x19io/common/reporting.proto\x1a\x18io/common/personal.proto\x1a$io/single_use_coupons/campaign.proto\x1a!io/single_use_coupons/offer.proto\x1a\"io/single_use_coupons/coupon.proto\x1a.protoc-gen-openapiv2/options/annotations.proto2\xe5@\n\x10SingleUseCoupons\x12\xc0\x01\n\x14\x63reateCouponCampaign\x12\".single_use_coupons.CouponCampaign\x1a\x06.io.Id\"|\x92\x41T\n\x10\x43oupon Campaigns\x12\x16\x43reate Coupon Campaign\x1a(Creates a new Single Use Coupon Campaign\x82\xd3\xe4\x93\x02\x1f\"\x1a/coupon/singleUse/campaign:\x01*\x12\xd4\x01\n\x14updateCouponCampaign\x12\".single_use_coupons.CouponCampaign\x1a\".single_use_coupons.CouponCampaign\"t\x92\x41L\n\x10\x43oupon Campaigns\x12\x16Update Coupon Campaign\x1a Updates an existing Pass Project\x82\xd3\xe4\x93\x02\x1f\x1a\x1a/coupon/singleUse/campaign:\x01*\x12\xb4\x01\n\x11getCouponCampaign\x12\x06.io.Id\x1a\".single_use_coupons.CouponCampaign\"s\x92\x41I\n\x10\x43oupon Campaigns\x12\x13Get Coupon Campaign\x1a Gets an existing Coupon Campaign\x82\xd3\xe4\x93\x02!\x12\x1f/coupon/singleUse/campaign/{id}\x12\x9b\x03\n\x14\x64\x65leteCouponCampaign\x12\x06.io.Id\x1a\x16.google.protobuf.Empty\"\xe2\x02\x92\x41\xb7\x02\n\x10\x43oupon Campaigns\x12\x16\x44\x65lete Coupon Campaign\x1a\x8a\x02\x44\x65letes an existing Coupon Campaign by id. Deleting a Coupon Campaign results in the related offer being deleted, and all coupons being invalidated in the customers Mobile Wallet; rendering them unusable. This method needs to be used with care, this is irreversible.\x82\xd3\xe4\x93\x02!*\x1f/coupon/singleUse/campaign/{id}\x12\x94\x02\n\x1dlistCouponCampaignsDeprecated\x12\x0e.io.Pagination\x1a\".single_use_coupons.CouponCampaign\"\xbc\x01\x92\x41\x95\x01\n\x10\x43oupon Campaigns\x12\"List Coupon Campaigns [DEPRECATED]\x1a][DEPRECATED: OR operator is not supported] Lists all Coupon Campaigns for the logged in user.\x82\xd3\xe4\x93\x02\x1d\x12\x1b/coupon/singleUse/campaigns0\x01\x12\xbe\x04\n\x13listCouponCampaigns\x12\x0b.io.Filters\x1a\".single_use_coupons.CouponCampaign\"\xf3\x03\x92\x41\xc4\x03\n\x10\x43oupon Campaigns\x12\x15List Coupon Campaigns\x1a\x98\x03Lists all Coupon Campaigns for the logged in user.\n\n<span style=\"font-weight:bold\">About filter field names, operators and sample payloads:</span> <a target=\"_blank\" href=\"https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-campaigns\">https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-campaigns</a>\x82\xd3\xe4\x93\x02%\" /coupon/singleUse/campaigns/list:\x01*0\x01\x12\xf2\x01\n\x0cgetAnalytics\x12\x14.io.AnalyticsRequest\x1a\x33.single_use_coupons.CouponCampaignAnalyticsResponse\"\x96\x01\x92\x41]\n\x10\x43oupon Campaigns\x12\x1dGet Coupon Campaign Analytics\x1a*Retrieves protocol specific analytics data\x82\xd3\xe4\x93\x02\x30\x12./coupon/singleUse/campaign/{classId}/analytics\x12\xa3\x01\n\x11\x63reateCouponOffer\x12\x1f.single_use_coupons.CouponOffer\x1a\x06.io.Id\"e\x92\x41@\n\rCoupon Offers\x12\x13\x43reate Coupon Offer\x1a\x1a\x43reates a new Coupon Offer\x82\xd3\xe4\x93\x02\x1c\"\x17/coupon/singleUse/offer:\x01*\x12\xc2\x01\n\x11updateCouponOffer\x12\x1f.single_use_coupons.CouponOffer\x1a\x1f.single_use_coupons.CouponOffer\"k\x92\x41\x46\n\rCoupon Offers\x12\x13Update Coupon Offer\x1a Updates an existing Coupon Offer\x82\xd3\xe4\x93\x02\x1c\x1a\x17/coupon/singleUse/offer:\x01*\x12\xa2\x01\n\x0egetCouponOffer\x12\x06.io.Id\x1a\x1f.single_use_coupons.CouponOffer\"g\x92\x41@\n\rCoupon Offers\x12\x10Get Coupon Offer\x1a\x1dGets an existing Coupon Offer\x82\xd3\xe4\x93\x02\x1e\x12\x1c/coupon/singleUse/offer/{id}\x12\xd8\x02\n\x11\x64\x65leteCouponOffer\x12\x06.io.Id\x1a\x16.google.protobuf.Empty\"\xa2\x02\x92\x41\xfa\x01\n\rCoupon Offers\x12\x13\x44\x65lete Coupon Offer\x1a\xd3\x01\x44\x65letes an existing Coupon Offer by id. Deleting a Coupon Offer results in all coupons being invalidated in the customers Mobile Wallet; rendering them unusable. Needs to be used with care, this is irreversible.\x82\xd3\xe4\x93\x02\x1e*\x1c/coupon/singleUse/offer/{id}\x12\xa1\x02\n\x1alistCouponOffersDeprecated\x12\x35.single_use_coupons.CouponOffersListRequestDeprecated\x1a\x1f.single_use_coupons.CouponOffer\"\xa8\x01\x92\x41\x84\x01\n\rCoupon Offers\x12\x1fList Coupon Offers [DEPRECATED]\x1aR[DEPRECATED: OR operator is not supported] Lists all Coupon Offers for a campaign.\x82\xd3\xe4\x93\x02\x1a\x12\x18/coupon/singleUse/offers0\x01\x12\xbe\x04\n\x10listCouponOffers\x12+.single_use_coupons.CouponOffersListRequest\x1a\x1f.single_use_coupons.CouponOffer\"\xd9\x03\x92\x41\xad\x03\n\rCoupon Offers\x12\x12List Coupon Offers\x1a\x87\x03Lists all Coupon Offers for a campaign.\n\n<span style=\"font-weight:bold\">About filter field names, operators and sample payloads:</span> <a target=\"_blank\" href=\"https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-offers\">https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-offers</a>\x82\xd3\xe4\x93\x02\"\"\x1d/coupon/singleUse/offers/list:\x01*0\x01\x12\x8f\x01\n\x0c\x63reateCoupon\x12\x1a.single_use_coupons.Coupon\x1a\x06.io.Id\"[\x92\x41\x35\n\x07\x43oupons\x12\rCreate Coupon\x1a\x1b\x43reates a new unique Coupon\x82\xd3\xe4\x93\x02\x1d\"\x18/coupon/singleUse/coupon:\x01*\x12\x8e\x01\n\x0cupdateCoupon\x12\x1a.single_use_coupons.Coupon\x1a\x06.io.Id\"Z\x92\x41\x34\n\x07\x43oupons\x12\rUpdate Coupon\x1a\x1aUpdates an existing Coupon\x82\xd3\xe4\x93\x02\x1d\x1a\x18/coupon/singleUse/coupon:\x01*\x12\xbe\x01\n\x13streamCouponUpdates\x12\x1a.single_use_coupons.Coupon\x1a\x06.io.Id\"\x7f\x92\x41|\n\x07\x43oupons\x12\'Stream Coupon Updates (gRPC SDKss only)\x1aHUpdates existing Coupon records via stream. To be used for batch update.(\x01\x30\x01\x12\xeb\x02\n\x0credeemCoupon\x12\x1a.single_use_coupons.Coupon\x1a\x06.io.Id\"\xb6\x02\x92\x41\x88\x02\n\x07\x43oupons\x12\rRedeem Coupon\x1a\xed\x01Redeems an existing Coupon. Use this endpoint when you want to capture redemption data and trigger the switch to the redemption design of the coupon. The coupon cannot be used again after calling this endpoint, and is marked as redeemed.\x82\xd3\xe4\x93\x02$\x1a\x1f/coupon/singleUse/coupon/redeem:\x01*\x12\x8b\x02\n\x16updateCouponExternalId\x12..single_use_coupons.CouponNewExternalIdRequest\x1a\x06.io.Id\"\xb8\x01\x92\x41\x86\x01\n\x07\x43oupons\x12\x19Update Coupon External Id\x1a`Updates an external id of an existing coupon. Extenal id needs to be unique within the campaign.\x82\xd3\xe4\x93\x02(\x1a#/coupon/singleUse/coupon/externalId:\x01*\x12\xcb\x01\n\x17streamCouponRedemptions\x12\x1a.single_use_coupons.Coupon\x1a\x06.io.Id\"\x87\x01\x92\x41\x83\x01\n\x07\x43oupons\x12*Stream Coupon Redemptions (gRPC SDKs only)\x1aLRedeems existing Coupon records via stream. To be used for batch redemption.(\x01\x30\x01\x12\x8e\x01\n\rgetCouponById\x12\x06.io.Id\x1a\x1a.single_use_coupons.Coupon\"Y\x92\x41\x31\n\x07\x43oupons\x12\x10Get Coupon by ID\x1a\x14Gets a Coupon record\x82\xd3\xe4\x93\x02\x1f\x12\x1d/coupon/singleUse/coupon/{id}\x12\xf4\x01\n\x15getCouponByExternalId\x12%.single_use_coupons.ExternalIdRequest\x1a\x1a.single_use_coupons.Coupon\"\x97\x01\x92\x41I\n\x07\x43oupons\x12\x19Get Coupon by External ID\x1a#Gets a Coupon record by External ID\x82\xd3\xe4\x93\x02\x45\x12\x43/coupon/singleUse/coupon/externalId/{couponCampaignId}/{externalId}\x12\xc2\x02\n\nvoidCoupon\x12\x1a.single_use_coupons.Coupon\x1a\x16.google.protobuf.Empty\"\xff\x01\x92\x41\xd8\x01\n\x07\x43oupons\x12\x0bVoid Coupon\x1a\xbf\x01Voids (deletes) an existing Coupon by ID or External ID. Invalidates the coupon in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x1d*\x18/coupon/singleUse/coupon:\x01*\x12\xb8\x02\n%listCouponsByCouponCampaignDeprecated\x12).single_use_coupons.ListRequestDeprecated\x1a\x1a.single_use_coupons.Coupon\"\xc5\x01\x92\x41\x8d\x01\n\x07\x43oupons\x12\x19List Coupons [DEPRECATED]\x1ag[DEPRECATED: OR operator is not supported] List all coupons for a Coupon Campaign. Supports pagination.\x82\xd3\xe4\x93\x02.\x12,/coupon/singleUse/coupons/{couponCampaignId}0\x01\x12\xd7\x04\n\x1blistCouponsByCouponCampaign\x12\x1f.single_use_coupons.ListRequest\x1a\x1a.single_use_coupons.Coupon\"\xf8\x03\x92\x41\xb8\x03\n\x07\x43oupons\x12\x0cList Coupons\x1a\x9e\x03List all coupons for a Coupon Campaign. Supports pagination.\n\n<span style=\"font-weight:bold\">About filter field names, operators and sample payloads:</span> <a target=\"_blank\" href=\"https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-coupons\">https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-coupons</a>\x82\xd3\xe4\x93\x02\x36\"1/coupon/singleUse/coupons/list/{couponCampaignId}:\x01*0\x01\x12\x98\x02\n&countCouponsByCouponCampaignDeprecated\x12).single_use_coupons.ListRequestDeprecated\x1a\t.io.Count\"\xb7\x01\x92\x41z\n\x07\x43oupons\x12\x1a\x43ount Coupons [DEPRECATED]\x1aS[DEPRECATED: OR operator is not supported] Count all coupons for a Coupon Campaign.\x82\xd3\xe4\x93\x02\x34\x12\x32/coupon/singleUse/coupons/count/{couponCampaignId}\x12\xb3\x04\n\x1c\x63ountCouponsByCouponCampaign\x12\x1f.single_use_coupons.ListRequest\x1a\t.io.Count\"\xe6\x03\x92\x41\xa5\x03\n\x07\x43oupons\x12\rCount Coupons\x1a\x8a\x03\x43ount all coupons for a Coupon Campaign.\n\n<span style=\"font-weight:bold\">About filter field names, operators and sample payloads:</span> <a target=\"_blank\" href=\"https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-coupons\">https://help.passkit.com/en/articles/4130967-coupon-protocol-filtering-listing-and-counting-by-api#filter-coupons</a>\x82\xd3\xe4\x93\x02\x37\"2/coupon/singleUse/coupons/count/{couponCampaignId}:\x01*\x12\xb4\x01\n\x0bpatchPerson\x12\x11.io.PersonRequest\x1a\x06.io.Id\"\x89\x01\x92\x41\\\n\x07\x43oupons\x12\x1bUpdate Personal Information\x1a\x34Updates personal information of a coupon pass holder\x82\xd3\xe4\x93\x02$2\x1f/coupon/singleUse/coupon/person:\x01*\x12\xb9\x01\n\x12\x63opyCouponCampaign\x12\'.single_use_coupons.CampaignCopyRequest\x1a\x06.io.Id\"r\x92\x41\x45\n\x10\x43oupon Campaigns\x12\rCopy Campaign\x1a\"Copies an existing campaign record\x82\xd3\xe4\x93\x02$\"\x1f/coupon/singleUse/campaign/copy:\x01*\x12\xf0\x01\n\x16getMetaKeysForCampaign\x12\x06.io.Id\x1a\x0b.io.Strings\"\xc0\x01\x92\x41\x90\x01\n\x10\x43oupon Campaigns\x12\x1cGet Meta Keys for a Campaign\x1a^Returns a list of distinct meta field keys. Can be used for building filters / table headings.\x82\xd3\xe4\x93\x02&\x12$/coupon/singleUse/campaign/meta/{id}B\x83\x08\n!com.passkit.grpc.SingleUseCouponsZ7stash.passkit.com/io/model/sdk/go/io/single_use_coupons\xaa\x02\x1dPassKit.Grpc.SingleUseCoupons\x92\x41\x83\x07\x12\xbe\x02\n\x1dPassKit Single Use Coupon API\x12\x9c\x01This protocol is suit for cases where the user requires a clean and simple single use coupon for short term coupon campaigns in Apple Wallet and Google Pay.\x1a\x38https://passkit.com/legal/terms-of-subscription-service/\"?\n\x0fPassKit Support\x12\x17https://docs.passkit.io\x1a\x13support@passkit.com2\x03\x31.0*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR9\n\x03\x32\x30\x30\x12\x32\n(Returned when the request is successful.\x12\x06\n\x04\x9a\x02\x01\x07R4\n\x03\x34\x30\x30\x12-\n+Returned when wrong user input is provided.R0\n\x03\x34\x30\x31\x12)\n\'Returned when the user is unauthorized.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.R;\n\x03\x34\x30\x34\x12\x34\n*Returned when the resource does not exist.\x12\x06\n\x04\x9a\x02\x01\x07R<\n\x03\x35\x30\x30\x12\x35\n+Returned when there is an unexpected error.\x12\x06\n\x04\x9a\x02\x01\x07RW\n\x03\x35\x30\x33\x12P\nNServer is unavailable. Back off for 250ms and repeat request until successful.Z>\n<\n\napiKeyAuth\x12.\x08\x02\x12\x19JWT Authentication token.\x1a\rAuthorization \x02\x62\x10\n\x0e\n\napiKeyAuth\x12\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module SingleUseCoupons
end
