# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/event_tickets/a_rpc.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'
require 'google/api/annotations_pb'
require 'io/common/common_objects_pb'
require 'io/common/filter_pb'
require 'io/common/reporting_pb'
require 'io/event_tickets/event_pb'
require 'io/event_tickets/production_pb'
require 'io/event_tickets/ticket_type_pb'
require 'io/event_tickets/ticket_pb'
require 'io/event_tickets/venue_pb'


descriptor_data = "\n\x1cio/event_tickets/a_rpc.proto\x12\revent_tickets\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1eio/common/common_objects.proto\x1a\x16io/common/filter.proto\x1a\x19io/common/reporting.proto\x1a\x1cio/event_tickets/event.proto\x1a!io/event_tickets/production.proto\x1a\"io/event_tickets/ticket_type.proto\x1a\x1dio/event_tickets/ticket.proto\x1a\x1cio/event_tickets/venue.proto\x1a.protoc-gen-openapiv2/options/annotations.proto2\xe6W\n\x0c\x45ventTickets\x12\x98\x01\n\x10\x63reateProduction\x12\x19.event_tickets.Production\x1a\x06.io.Id\"a\x92\x41;\n\x0bProductions\x12\x11\x43reate Production\x1a\x19\x43reates a new Production.\x82\xd3\xe4\x93\x02\x1d\"\x18/eventTickets/production:\x01*\x12\xc9\x02\n\x0fpatchProduction\x12\x19.event_tickets.Production\x1a\x19.event_tickets.Production\"\xff\x01\x92\x41\xd8\x01\n\x0bProductions\x12\x10Patch Production\x1a\xb6\x01Partially updates an existing Production. Only id/uid and updating fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.\x82\xd3\xe4\x93\x02\x1d\x32\x18/eventTickets/production:\x01*\x12\xbb\x02\n\x10updateProduction\x12\x19.event_tickets.Production\x1a\x19.event_tickets.Production\"\xf0\x01\x92\x41\xc9\x01\n\x0bProductions\x12\x11Update Production\x1a\xa6\x01\x46ully updates an existing Production. All required fields are required. Note: changes will update and affect all existing Events & Tickets related to this Production.\x82\xd3\xe4\x93\x02\x1d\x1a\x18/eventTickets/production:\x01*\x12\x97\x01\n\rgetProduction\x12\x06.io.Id\x1a\x19.event_tickets.Production\"c\x92\x41;\n\x0bProductions\x12\x0eGet Production\x1a\x1cGets an existing Production.\x82\xd3\xe4\x93\x02\x1f\x12\x1d/eventTickets/production/{id}\x12\x99\x03\n\x10\x64\x65leteProduction\x12\x19.event_tickets.Production\x1a\x16.google.protobuf.Empty\"\xd1\x02\x92\x41\xaa\x02\n\x0bProductions\x12\x11\x44\x65lete Production\x1a\x87\x02\x44\x65letes an existing Production. Deleting a Production results in all Ticket Types, Events & Tickets for the Production being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x1d*\x18/eventTickets/production:\x01*\x12\xb2\x01\n\x0flistProductions\x12\x0b.io.Filters\x1a\x19.event_tickets.Production\"u\x92\x41N\n\x0bProductions\x12\x10List Productions\x1a-Lists all Productions for the logged in user.\x82\xd3\xe4\x93\x02\x1e\"\x19/eventTickets/productions:\x01*0\x01\x12\xe0\x01\n\x0cgetAnalytics\x12\x14.io.AnalyticsRequest\x1a*.event_tickets.ProductionAnalyticsResponse\"\x8d\x01\x92\x41V\n\x0bProductions\x12\x18Get Production Analytics\x1a-Retrieves Production specific analytics data.\x82\xd3\xe4\x93\x02.\x12,/eventTickets/production/{classId}/analytics\x12\xa9\x01\n\x0e\x63opyProduction\x12$.event_tickets.ProductionCopyRequest\x1a\x06.io.Id\"i\x92\x41>\n\x0bProductions\x12\x0f\x43opy Production\x1a\x1e\x43opies an existing Production.\x82\xd3\xe4\x93\x02\"\"\x1d/eventTickets/production/copy:\x01*\x12z\n\x0b\x63reateVenue\x12\x14.event_tickets.Venue\x1a\x06.io.Id\"M\x92\x41,\n\x06Venues\x12\x0c\x43reate Venue\x1a\x14\x43reates a new Venue.\x82\xd3\xe4\x93\x02\x18\"\x13/eventTickets/venue:\x01*\x12\x95\x02\n\x0bupdateVenue\x12\x14.event_tickets.Venue\x1a\x14.event_tickets.Venue\"\xd9\x01\x92\x41\xb7\x01\n\x06Venues\x12\x0cUpdate Venue\x1a\x9e\x01Updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.\x82\xd3\xe4\x93\x02\x18\x1a\x13/eventTickets/venue:\x01*\x12\x9d\x02\n\npatchVenue\x12\x14.event_tickets.Venue\x1a\x14.event_tickets.Venue\"\xe2\x01\x92\x41\xc0\x01\n\x06Venues\x12\x0bPatch Venue\x1a\xa8\x01Partially updates an existing Venue. Requires ID or User Defined ID to be set. Note: changes will update and affect all existing Events & Tickets related to this Venue.\x82\xd3\xe4\x93\x02\x18\x32\x13/eventTickets/venue:\x01*\x12\x9e\x01\n\x0cgetVenueById\x12\x06.io.Id\x1a\x14.event_tickets.Venue\"p\x92\x41M\n\x06Venues\x12\tGet Venue\x1a\x38Gets an existing Venue by PassKit ID or User Defined ID.\x82\xd3\xe4\x93\x02\x1a\x12\x18/eventTickets/venue/{id}\x12\xd5\x02\n\x0b\x64\x65leteVenue\x12\x14.event_tickets.Venue\x1a\x16.google.protobuf.Empty\"\x97\x02\x92\x41\xf5\x01\n\x06Venues\x12\x0c\x44\x65lete Venue\x1a\xdc\x01\x44\x65letes an existing Venue. Deleting a Venue, Events & Tickets for the Venue being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x18*\x13/eventTickets/venue:\x01*\x12\x94\x01\n\nlistVenues\x12\x0b.io.Filters\x1a\x14.event_tickets.Venue\"a\x92\x41?\n\x06Venues\x12\x0bList Venues\x1a(Lists all Venues for the logged in user.\x82\xd3\xe4\x93\x02\x19\"\x14/eventTickets/venues:\x01*0\x01\x12\xa1\x02\n\x0b\x63reateEvent\x12\x14.event_tickets.Event\x1a\x06.io.Id\"\xf3\x01\x92\x41\xd1\x01\n\x06\x45vents\x12\x0c\x43reate Event\x1a\xb8\x01\x43reates a new Event instance for a Production. You don\'t need to pass in the full Production and Venue objects if they already exist, you can provide just the id and it will work fine.\x82\xd3\xe4\x93\x02\x18\"\x13/eventTickets/event:\x01*\x12\xc0\x02\n\x0bupdateEvent\x12\x14.event_tickets.Event\x1a\x14.event_tickets.Event\"\x84\x02\x92\x41\xe2\x01\n\x06\x45vents\x12\x0cUpdate Event\x1a\xc9\x01\x46ully updates an existing Event. Requires ID to be set. Note1: changes will update & affect all existing tickets related to this event. Note2: Production and Venue cannot be changed from this endpoint.\x82\xd3\xe4\x93\x02\x18\x1a\x13/eventTickets/event:\x01*\x12\xff\x01\n\npatchEvent\x12\x14.event_tickets.Event\x1a\x14.event_tickets.Event\"\xc4\x01\x92\x41\xa2\x01\n\x06\x45vents\x12\x0bPatch Event\x1a\x8a\x01Partially updates an existing Event. Requires ID to be set. Note: changes will update & affect all existing tickets related to this event.\x82\xd3\xe4\x93\x02\x18\x32\x13/eventTickets/event:\x01*\x12\x8c\x01\n\x0cgetEventById\x12\x06.io.Id\x1a\x14.event_tickets.Event\"^\x92\x41\x38\n\x06\x45vents\x12\x0fGet Event by ID\x1a\x1dGets an existing Event by ID.\x82\xd3\xe4\x93\x02\x1d\x12\x1b/eventTickets/event/id/{id}\x12\xce\x01\n\x1bgetEventByStartDateAndVenue\x12\x1e.event_tickets.GetEventRequest\x1a\x14.event_tickets.Event\"y\x92\x41S\n\x06\x45vents\x12\x1fGet Event by Start Date & Venue\x1a(Gets an existing Event by event details.\x82\xd3\xe4\x93\x02\x1d\x12\x1b/eventTickets/event/details\x12\xf2\x02\n\x0b\x64\x65leteEvent\x12\x14.event_tickets.Event\x1a\x16.google.protobuf.Empty\"\xb4\x02\x92\x41\x92\x02\n\x06\x45vents\x12\x0c\x44\x65lete Event\x1a\xf9\x01\x44\x65letes an existing Event. Requires ID to be set. Deleting an Event results in all tickets for the Event being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x18*\x13/eventTickets/event:\x01*\x12\xb3\x01\n\nlistEvents\x12\x1f.event_tickets.EventListRequest\x1a .event_tickets.EventListResponse\"`\x92\x41\x39\n\x06\x45vents\x12\x0bList Events\x1a\"Lists all Events for a Production.\x82\xd3\xe4\x93\x02\x1e\"\x19/eventTickets/events/list:\x01*0\x01\x12\x94\x01\n\x10\x63reateTicketType\x12\x19.event_tickets.TicketType\x1a\x06.io.Id\"]\x92\x41\x37\n\x0cTicket Types\x12\x0bTicket Type\x1a\x1a\x43reates a new Ticket Type.\x82\xd3\xe4\x93\x02\x1d\"\x18/eventTickets/ticketType:\x01*\x12\x8b\x02\n\x10updateTicketType\x12\x19.event_tickets.TicketType\x1a\x19.event_tickets.TicketType\"\xc0\x01\x92\x41\x99\x01\n\x0cTicket Types\x12\x12Update Ticket Type\x1auUpdates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.\x82\xd3\xe4\x93\x02\x1d\x1a\x18/eventTickets/ticketType:\x01*\x12\x93\x02\n\x0fpatchTicketType\x12\x19.event_tickets.TicketType\x1a\x19.event_tickets.TicketType\"\xc9\x01\x92\x41\xa2\x01\n\x0cTicket Types\x12\x11Patch Ticket Type\x1a\x7fPartially updates an existing Ticket Type. Note: changes will update & affect all existing Tickets related to this Ticket Type.\x82\xd3\xe4\x93\x02\x1d\x32\x18/eventTickets/ticketType:\x01*\x12\xb5\x01\n\x11getTicketTypeById\x12\x06.io.Id\x1a\x19.event_tickets.TicketType\"}\x92\x41R\n\x0cTicket Types\x12\x1dGet Ticket Type by PassKit ID\x1a#Gets an existing Ticket Type by ID.\x82\xd3\xe4\x93\x02\"\x12 /eventTickets/ticketType/id/{id}\x12\x90\x02\n\x1cgetTicketTypeByUserDefinedId\x12\x1e.event_tickets.GetByUidRequest\x1a\x19.event_tickets.TicketType\"\xb4\x01\x92\x41x\n\x0cTicket Types\x12\"Get Ticket Type by User Defined ID\x1a\x44Gets an existing Ticket Type by User Defined ID (and Production ID).\x82\xd3\xe4\x93\x02\x33\x12\x31/eventTickets/ticketType/uid/{productionId}/{uid}\x12\xb5\x03\n\x10\x64\x65leteTicketType\x12\x19.event_tickets.TicketType\x1a\x16.google.protobuf.Empty\"\xed\x02\x92\x41\xc6\x02\n\x0cTicket Types\x12\x12\x44\x65lete Ticket Type\x1a\xa1\x02\x44\x65letes an existing Ticket Type by ID, or User Defined ID (and Production ID). Deleting a Ticket Type results in the tickets for the Ticket Type being deleted and invalidated in the customers Mobile Wallet; rendering them unusable. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x1d*\x18/eventTickets/ticketType:\x01*\x12\xd8\x01\n\x0flistTicketTypes\x12$.event_tickets.TicketTypeListRequest\x1a\x19.event_tickets.TicketType\"\x81\x01\x92\x41K\n\x0cTicket Types\x12\x11List Ticket Types\x1a(Lists all Ticket Types for a Production.\x82\xd3\xe4\x93\x02-\"(/eventTickets/ticketTypes/{productionId}:\x01*0\x01\x12\xee\x02\n\x0bissueTicket\x12!.event_tickets.IssueTicketRequest\x1a\x06.io.Id\"\xb3\x02\x92\x41\x90\x02\n\x07Tickets\x12\x0cIssue Ticket\x1a\xf6\x01\x43reates a new unique Ticket record by PassKit IDs. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.\x82\xd3\xe4\x93\x02\x19\"\x14/eventTickets/ticket:\x01*\x12\xd1\x03\n\x0fissueTicketById\x12\x15.event_tickets.Ticket\x1a%.event_tickets.IssueTicketResponseIds\"\xff\x02\x92\x41\xd9\x02\n\x07Tickets\x12\x0cIssue Ticket\x1a\xbf\x02\x43reates a new unique Ticket record by User Defined IDs. User Defined IDs for Production, Venue and TicketType are required. If the Event does not yet exist, it will automatically be created. The combination of event.production.id, event.startDate, event.venue.id & ticket.ticketTypeUid is enforced as unique for Events.\x82\xd3\xe4\x93\x02\x1c\"\x17/eventTickets/ticket/id:\x01*\x12\xe5\x01\n\x0cupdateTicket\x12\x15.event_tickets.Ticket\x1a\x06.io.Id\"\xb5\x01\x92\x41\x92\x01\n\x07Tickets\x12\rUpdate Ticket\x1axUpdates an existing Ticket. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x82\xd3\xe4\x93\x02\x19\x1a\x14/eventTickets/ticket:\x01*\x12\xc0\x01\n\x0bpatchPerson\x12 .event_tickets.EventTicketPerson\x1a\x06.io.Id\"\x86\x01\x92\x41]\n\x07Tickets\x12\x1bUpdate Personal Information\x1a\x35Updates personal information of a event ticket holder\x82\xd3\xe4\x93\x02 2\x1b/eventTickets/ticket/person:\x01*\x12\x8b\x03\n\x0evalidateTicket\x12$.event_tickets.ValidateTicketRequest\x1a%.event_tickets.ValidateTicketResponse\"\xab\x02\x92\x41\xff\x01\n\x07Tickets\x12\x0fValidate Ticket\x1a\xe2\x01Validates an existing Ticket. Use this endpoint when you want to check validity of a ticket. Tickets can be validated multiple times. Requires ticket.id to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x82\xd3\xe4\x93\x02\"\x1a\x1d/eventTickets/ticket/validate:\x01*\x12\x95\x02\n\x0credeemTicket\x12\".event_tickets.RedeemTicketRequest\x1a\x06.io.Id\"\xd8\x01\x92\x41\xae\x01\n\x07Tickets\x12\rRedeem Ticket\x1a\x93\x01Redeems an existing Ticket. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.\x82\xd3\xe4\x93\x02 \x1a\x1b/eventTickets/ticket/redeem:\x01*\x12\xd0\x02\n\x1aredeemTicketsByOrderNumber\x12\".event_tickets.RedeemByOrderNumber\x1a\x07.io.Ids\"\x84\x02\x92\x41\xcd\x01\n\x07Tickets\x12\x1eRedeem Tickets by Order Number\x1a\xa1\x01Redeems existing Tickets by Order Number. Use this endpoint when you want to capture redemption data and trigger the switch to the redeemed design of the Ticket.\x82\xd3\xe4\x93\x02-\x1a(/eventTickets/tickets/orderNumber/redeem:\x01*\x12\x8f\x01\n\rgetTicketById\x12\x06.io.Id\x1a\x15.event_tickets.Ticket\"_\x92\x41\x38\n\x07Tickets\x12\x10Get Ticket by ID\x1a\x1bGets a Ticket record by ID.\x82\xd3\xe4\x93\x02\x1e\x12\x1c/eventTickets/ticket/id/{id}\x12\xd0\x01\n\x17getTicketByTicketNumber\x12\".event_tickets.TicketNumberRequest\x1a\x15.event_tickets.Ticket\"z\x92\x41N\n\x07Tickets\x12\x1bGet Ticket by Ticket Number\x1a&Gets a Ticket record by Ticket Number.\x82\xd3\xe4\x93\x02#\x12!/eventTickets/ticket/ticketNumber\x12\xce\x01\n\x17getTicketsByOrderNumber\x12!.event_tickets.OrderNumberRequest\x1a\x16.event_tickets.Tickets\"x\x92\x41L\n\x07Tickets\x12\x1bGet Tickets by Order Number\x1a$Gets Ticket records by Order Number.\x82\xd3\xe4\x93\x02#\x12!/eventTickets/tickets/orderNumber\x12\xae\x02\n\x12getEventTicketPass\x12%.event_tickets.EventTicketPassRequest\x1a\x0f.io.PassBundles\"\xdf\x01\x92\x41\xbe\x01\n\x07Tickets\x12\x15Get Event Ticket Pass\x1a\x9b\x01Retrieves digital event ticket pass(es) in the requested format based on the index provided. Only one of ticketId, ticketNumber or orderNumber is required.\x82\xd3\xe4\x93\x02\x17\"\x12/eventTickets/pass:\x01*\x12\x95\x03\n\x0c\x64\x65leteTicket\x12\x17.event_tickets.TicketId\x1a\x16.google.protobuf.Empty\"\xd3\x02\x92\x41\xb0\x02\n\x07Tickets\x12\rDelete Ticket\x1a\x95\x02\x44\x65lete an existing Ticket by Id or Ticket Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care. Requires ticket.ID to be set, or ticket.ticketNumber + ticket.event.production.id to be set.\x82\xd3\xe4\x93\x02\x19*\x14/eventTickets/ticket:\x01*\x12\xdd\x02\n\x1a\x64\x65leteTicketsByOrderNumber\x12!.event_tickets.OrderNumberRequest\x1a\x16.google.protobuf.Empty\"\x83\x02\x92\x41\xdb\x01\n\x07Tickets\x12\x1e\x44\x65lete Tickets by Order Number\x1a\xaf\x01\x44\x65lete existing Ticketd by Order Number. Invalidates the ticket in the customers Mobile Wallet; rendering it useless. This method is irreversible and should be used with care.\x82\xd3\xe4\x93\x02\x1e*\x19/eventTickets/orderNumber:\x01*\x12\xcf\x01\n\x0blistTickets\x12 .event_tickets.TicketListRequest\x1a\".event_tickets.TicketLimitedFields\"x\x92\x41P\n\x07Tickets\x12\x0cList Tickets\x1a\x37List all tickets for a Production. Supports pagination.\x82\xd3\xe4\x93\x02\x1f\"\x1a/eventTickets/tickets/list:\x01*0\x01\x12\xcb\x01\n\x0c\x63ountTickets\x12 .event_tickets.TicketListRequest\x1a\t.io.Count\"\x8d\x01\x92\x41\x64\n\x07Tickets\x12\rCount Tickets\x1aJCount all tickets for a Production, Event, Ticket Type and / or Start Date\x82\xd3\xe4\x93\x02 \"\x1b/eventTickets/tickets/count:\x01*B\xec\x07\n\x1d\x63om.passkit.grpc.EventTicketsZ2stash.passkit.com/io/model/sdk/go/io/event_tickets\xaa\x02\x19PassKit.Grpc.EventTickets\x92\x41\xf9\x06\x12\xb4\x02\n\x19PassKit Event Tickets API\x12\x91\x01This API enables you to get all your Digital Event Tickets into Apple Wallet & Google Pay, from theatre and cinema, to sport events and concerts.\x1a\x38https://passkit.com/legal/terms-of-subscription-service/\"?\n\x0fPassKit Support\x12\x17https://docs.passkit.io\x1a\x13support@passkit.com2\x08\x30.1-spec*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR9\n\x03\x32\x30\x30\x12\x32\n(Returned when the request is successful.\x12\x06\n\x04\x9a\x02\x01\x07R4\n\x03\x34\x30\x30\x12-\n+Returned when wrong user input is provided.R0\n\x03\x34\x30\x31\x12)\n\'Returned when the user is unauthorized.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.R;\n\x03\x34\x30\x34\x12\x34\n*Returned when the resource does not exist.\x12\x06\n\x04\x9a\x02\x01\x07R<\n\x03\x35\x30\x30\x12\x35\n+Returned when there is an unexpected error.\x12\x06\n\x04\x9a\x02\x01\x07RW\n\x03\x35\x30\x33\x12P\nNServer is unavailable. Back off for 250ms and repeat request until successful.Z>\n<\n\napiKeyAuth\x12.\x08\x02\x12\x19JWT Authentication token.\x1a\rAuthorization \x02\x62\x10\n\x0e\n\napiKeyAuth\x12\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module EventTickets
end
