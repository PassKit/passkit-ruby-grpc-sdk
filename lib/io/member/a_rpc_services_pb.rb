# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: io/member/a_rpc.proto for package 'members'
# Original file comments:
# *
# Members RPC
#
# The PassKit Members API lets you manage your membership programs and passes for Apple Wallet and Google Pay.

require 'grpc'
require 'io/member/a_rpc_pb'

module Members
  module Members
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'members.Members'

      # Create a program record. Allows a user to specify program details around enrolment, renewal and cancellation processes. Optionally allows the user to set the GPS location / Beacons that will trigger a lock-screen alert.
      rpc :createProgram, ::Members::Program, ::Io::Id
      # Updates an existing program record.
      rpc :updateProgram, ::Members::Program, ::Members::Program
      # Gets an existing program record by id.
      rpc :getProgram, ::Io::Id, ::Members::Program
      # Copies an existing program record to a new record, and allows for status of new program to be set; i.e. copy a draft to published (production) program. Will copy program AND related tier + template records.
      rpc :copyProgram, ::Members::ProgramCopyRequest, ::Io::Id
      # Deletes an existing program record by id. Deleting a program results in all tiers, and members underneath it being invalidated and removed. Needs to be used with care.
      rpc :deleteProgram, ::Io::Id, ::Google::Protobuf::Empty
      # Lists all programs for the logged in user.
      rpc :listProgramsDeprecated, ::Io::Pagination, stream(::Members::Program)
      # Lists all programs for the logged in user.
      rpc :listPrograms, ::Io::Filters, stream(::Members::Program)
      # Create a new tier in an existing member program. Tiers allow a user to categorize their membership program; tiers allow for additional detail that is specific to that 'group' of members. A program needs at least one tier.
      rpc :createTier, ::Members::Tier, ::Io::Id
      # Updates a tier by tier id
      rpc :updateTier, ::Members::Tier, ::Members::Tier
      # Gets a tier by tier ID
      rpc :getTier, ::Members::TierRequestInput, ::Members::Tier
      # Deletes a tier. Deleting a tier will invalidate and delete all the passes that are in the tier.
      rpc :deleteTier, ::Members::TierRequestInput, ::Google::Protobuf::Empty
      # Lists all the tiers.
      rpc :listTiersDeprecated, ::Members::ListRequestDeprecated, stream(::Members::Tier)
      # Lists all the tiers.
      rpc :listTiers, ::Members::ListRequest, stream(::Members::Tier)
      # Enrols a new member into a tier of a program. Returns the PassKit Member ID.
      rpc :enrolMember, ::Members::Member, ::Io::Id
      # Enrols a new member into the default tier (lowest tier index) of a program. Returns the PassKit Member ID.
      rpc :enrolMemberPublic, ::Members::Member, ::Io::Id
      rpc :getMemberRecordById, ::Io::Id, ::Members::Member
      rpc :getMemberRecordByExternalId, ::Members::MemberRecordByExternalIdRequest, ::Members::Member
      rpc :checkInMember, ::Members::MemberCheckInOutRequest, ::Members::MemberEvent
      rpc :checkOutMember, ::Members::MemberCheckInOutRequest, ::Members::MemberEvent
      rpc :listMembersDeprecated, ::Members::ListRequestDeprecated, stream(::Members::Member)
      rpc :listMembers, ::Members::ListRequest, stream(::Members::Member)
      rpc :updateMember, ::Members::Member, ::Io::Id
      # @todo: define callback
      rpc :earnPoints, ::Members::EarnBurnPointsRequest, ::Members::MemberPoints
      # @todo: define callback
      rpc :burnPoints, ::Members::EarnBurnPointsRequest, ::Members::MemberPoints
      rpc :setPoints, ::Members::SetPointsRequest, ::Members::MemberPoints
      rpc :changeMemberTier, ::Members::ChangeTierRequest, ::Members::MemberEvent
      rpc :updateMembersBySegment, ::Members::MemberSegmentRequest, ::Google::Protobuf::Empty
      rpc :deleteMembersBySegment, ::Members::MemberSegmentRequest, ::Google::Protobuf::Empty
      rpc :deleteMember, ::Members::Member, ::Google::Protobuf::Empty
      rpc :countMembersDeprecated, ::Members::ListRequestDeprecated, ::Io::Count
      rpc :countMembers, ::Members::ListRequest, ::Io::Count
      rpc :getMessageHistoryForMember, ::Io::Pagination, stream(::Io::Message)
      rpc :getMetaKeysForProgram, ::Io::Id, ::Io::Strings
      rpc :renewMembersExpiry, ::Members::UpdateExpiryRequest, ::Io::Count
      rpc :updateMemberExpiry, ::Members::MemberExpiry, ::Io::Id
      rpc :patchPerson, ::Io::PersonRequest, ::Io::Id
      rpc :countMemberEvents, ::Members::ListRequest, ::Io::Count
      rpc :listMemberEvents, ::Members::ListRequest, stream(::Members::MemberEvent)
      rpc :getMemberEventMetaKeysForProgram, ::Io::Id, ::Io::Strings
      rpc :listEventsForMember, ::Io::Id, stream(::Members::MemberEvent)
      rpc :deleteMemberEvents, ::Members::ListRequest, ::Google::Protobuf::Empty
      rpc :deleteEventsForMember, ::Io::Id, ::Google::Protobuf::Empty
      rpc :deleteMemberEvent, ::Io::Id, ::Google::Protobuf::Empty
      rpc :getProgramEnrolment, ::Io::Id, ::Io::EnrolmentUrls
    end

    Stub = Service.rpc_stub_class
  end
end
