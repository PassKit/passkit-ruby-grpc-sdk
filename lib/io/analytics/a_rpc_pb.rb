# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/analytics/a_rpc.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'io/common/reporting_pb'


descriptor_data = "\n\x18io/analytics/a_rpc.proto\x12\tanalytics\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x19io/common/reporting.proto2\xe6\x01\n\tAnalytics\x12\xd8\x01\n\x0cgetAnalytics\x12\x14.io.AnalyticsRequest\x1a\x15.io.AnalyticsResponse\"\x9a\x01\x92\x41{\n\tAnalytics\x12\rGet Analytics\x1a\x1bRetrieves an analytics dataJ\"\n\x03\x34\x30\x33\x12\x1b\n\x19User lacks authorization.J\x1e\n\x03\x34\x30\x34\x12\x17\n\x15Record was not found.\x82\xd3\xe4\x93\x02\x16\x12\x14/analytics/{classId}B\xa1\x07\n\x1a\x63om.passkit.grpc.AnalyticsZ.stash.passkit.com/io/model/sdk/go/io/analytics\xaa\x02\x16PassKit.Grpc.Analytics\x92\x41\xb8\x06\x12\xf3\x01\n\x15PassKit Analytics API\x12_The PassKit Analytics API lets you track the performance of Apple Wallet and Google Pay passes.\x1a\x38https://passkit.com/legal/terms-of-subscription-service/\"?\n\x0fPassKit Support\x12\x17https://docs.passkit.io\x1a\x13support@passkit.com*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonR9\n\x03\x32\x30\x30\x12\x32\n(Returned when the request is successful.\x12\x06\n\x04\x9a\x02\x01\x07R4\n\x03\x34\x30\x30\x12-\n+Returned when wrong user input is provided.R0\n\x03\x34\x30\x31\x12)\n\'Returned when the user is unauthorized.RP\n\x03\x34\x30\x33\x12I\nGReturned when the user does not have permission to access the resource.R;\n\x03\x34\x30\x34\x12\x34\n*Returned when the resource does not exist.\x12\x06\n\x04\x9a\x02\x01\x07R<\n\x03\x35\x30\x30\x12\x35\n+Returned when there is an unexpected error.\x12\x06\n\x04\x9a\x02\x01\x07RW\n\x03\x35\x30\x33\x12P\nNServer is unavailable. Back off for 250ms and repeat request until successful.Z>\n<\n\napiKeyAuth\x12.\x08\x02\x12\x19JWT Authentication token.\x1a\rAuthorization \x02\x62\x10\n\x0e\n\napiKeyAuth\x12\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Analytics
end
