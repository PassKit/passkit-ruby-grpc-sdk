# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/carrier.proto

require 'google/protobuf'

require 'io/common/localization_pb'


descriptor_data = "\n\x18io/flights/carrier.proto\x12\x07\x66lights\x1a\x1cio/common/localization.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xaf\x04\n\x07\x43\x61rrier\x12,\n\x0fiataCarrierCode\x18\x01 \x01(\tB\x13\x92\x41\x10\x8a\x01\r^[A-Z0-9]{2}$\x12,\n\x0ficaoCarrierCode\x18\x02 \x01(\tB\x13\x92\x41\x10\x8a\x01\r^[A-Z0-9]{3}$\x12(\n\x12iataAccountingCode\x18\x03 \x01(\x05\x42\x0c\x92\x41\tY\x00\x00\x00\x00\x00\x38\x8f@\x12\x13\n\x0b\x61irlineName\x18\x04 \x01(\t\x12\x31\n\x14localizedAirlineName\x18\x05 \x01(\x0b\x32\x13.io.LocalizedString\x12\x1a\n\x12passTypeIdentifier\x18\x06 \x01(\t\x12\x14\n\x0cprivateKeyId\x18\x07 \x01(\t:\xa3\x02\x92\x41\x9f\x02\n\x9c\x02*\x07\x43\x61rrier2\xdb\x01\x41 carrier record contains details of the carrier.  The carrier will be the issuer of the boarding pass and may be used as a marketing or operating carrier.  All marketing and operating carriers require a Carrier record.\xd2\x01\x0fiataCarrierCode\xd2\x01\x0b\x61irlineName\xd2\x01\x12passTypeIdentifier\"\"\n\x0b\x43\x61rrierCode\x12\x13\n\x0b\x63\x61rrierCode\x18\x01 \x01(\tB_\n\x18\x63om.passkit.grpc.FlightsZ,stash.passkit.com/io/model/sdk/go/io/flights\xaa\x02\x14PassKit.Grpc.Flightsb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Flights
  Carrier = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("flights.Carrier").msgclass
  CarrierCode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("flights.CarrierCode").msgclass
end
